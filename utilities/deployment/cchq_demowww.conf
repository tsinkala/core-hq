# Upstart django script
# this script will start/stop the django server running via a management command
# In Ubuntu, symlink this script to /etc/init/
description "start and stop the cchq demo server"

start on started cchq_www
stop on stopped cchq_www

# configuration variables.
# You'll want to change these as needed
env PROJECT_NAME=www.commcarehq.org
env DJANGO_HOME=/opt/www.commcarehq.org_project/src/commcare-hq #where manage.py is
env DJANGO_PORT=8021
env DJANGO_HOST=0.0.0.0 # bind to 0.0.0.0 or other port where needed
env DJANGO_VIRTUALENV=/opt/www.commcarehq.org_project/env/cchq_www
env CP_TIMEOUT=300             # 5 minutes oughtta do it.
env PROJECT_USER=cchqwww
env LOG_PATH=/opt/www.commcarehq.org_project/log/www.demo.commcarehq.org.log
env SSL_CERTIFICATE=/opt/www.commcarehq.org_project/cchq_www.crt
env SSL_PRIVATE_KEY=/opt/www.commcarehq.org_project/cchq_www-key.pem
env SSL_CERTIFICATE_CHAIN=/opt/www.commcarehq.org_project/dimagi_cacert.crt

# DRAGONS!
# This environment variable tells the settings file to run against the demo db.
# In order for it to work you have to add the following line to your sudoers file:
# Defaults        env_keep = "CUSTOMSETTINGS"
env CUSTOMSETTINGS=demo

expect fork

pre-start script
        chdir $DJANGO_HOME
        exec sudo -u $PROJECT_USER $DJANGO_VIRTUALENV/bin/python $DJANGO_HOME/manage.py syncdb --noinput
end script

script
        # Note, we're using the virtualenv's python interpreter.  Calling source/workon doesn't work here, so just call the ENV's executable instead.
        exec sudo -u $PROJECT_USER $DJANGO_VIRTUALENV/bin/python $DJANGO_HOME/manage.py runcpserver \
        host=$DJANGO_HOST \
        port=$DJANGO_PORT \
        timeout=$CP_TIMEOUT \
        ssl_certificate=$SSL_CERTIFICATE \
        ssl_private_key=$SSL_PRIVATE_KEY \
        ssl_certificate_chain=$SSL_CERTIFICATE_CHAIN > $LOG_PATH &
        # the & tells upstart we're creating a daemon upstart manages PID creation for you.
end script
